# Auto-install dependencies with Conan if the toolchain file is missing

# Determine the expected Conan toolchain path. If the user did not specify one
# explicitly then assume the default location generated by `conan install`.
if(DEFINED CMAKE_TOOLCHAIN_FILE)
  set(_conan_toolchain "${CMAKE_TOOLCHAIN_FILE}")
else()
  set(_conan_toolchain "${CMAKE_SOURCE_DIR}/conan/conan_toolchain.cmake")
endif()

# If the toolchain file does not exist, invoke Conan to generate it.
if(NOT EXISTS "${_conan_toolchain}")
  message(STATUS "Conan toolchain not found, running 'conan install'")
  find_program(CONAN_COMMAND conan REQUIRED)
  if(DEFINED CMAKE_BUILD_TYPE)
    set(_conan_build_type -s "build_type=${CMAKE_BUILD_TYPE}")
  else()
    set(_conan_build_type "")
  endif()
  execute_process(
    COMMAND ${CONAN_COMMAND} install . ${_conan_build_type} -b missing
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    RESULT_VARIABLE _conan_result
  )
  if(NOT _conan_result EQUAL 0)
    message(FATAL_ERROR "Conan install failed: ${_conan_result}")
  endif()
endif()

# Propagate the toolchain file to the rest of the configuration if it wasn't
# provided on the command line.
if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
  set(CMAKE_TOOLCHAIN_FILE "${_conan_toolchain}" CACHE FILEPATH "Conan toolchain" FORCE)
endif()

unset(_conan_toolchain)
unset(_conan_build_type)
unset(_conan_result)
