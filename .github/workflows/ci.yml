name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

env:
  # Store Conan cache under workspace for incremental cache
  CONAN_USER_HOME: ${{ github.workspace }}/.conan2

jobs:
  ################################################################
  # 1) LINT
  ################################################################
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - name: Install codespell
        run: pip3 install codespell
      - name: Lint
        run: cmake -D FORMAT_COMMAND=clang-format-18 -P cmake/lint.cmake
      - name: Spell check
        if: always()
        run: cmake -P cmake/spell.cmake

  ################################################################
  # 2) COVERAGE (Ubuntu + SwiftShader + needrestart disabled)
  ################################################################
  coverage:
    needs: [ lint ]
    runs-on: ubuntu-24.04
    env:
      DEBIAN_FRONTEND: noninteractive
      NEEDRESTART_MODE: a
    steps:
      - uses: actions/checkout@v4
      - uses: mozilla-actions/sccache-action@v0.0.5

      - name: Install Vulkan loader & SwiftShader
        run: |
          sudo apt-get update -q
          sudo apt-get install -y libvulkan1 vulkan-tools
          sudo mkdir -p /usr/share/vulkan/icd.d
          sudo wget -qO /usr/share/vulkan/icd.d/google_swiftshader_icd.json \
            https://raw.githubusercontent.com/google/SwiftShader/main/src/Vulkan/icd/icd.json
          sudo wget -qO /usr/lib/x86_64-linux-gnu/libVkICD_swiftshader.so \
            https://storage.googleapis.com/swiftshader/artifacts/Release/Linux/libVkICD_swiftshader.so

      - name: Install LCov
        run: sudo apt-get install -y lcov

      - name: Install X11 headers
        run: |
          sudo apt-get install -y \
            libx11-dev libxrandr-dev libxi-dev libxrender-dev \
            libxkbcommon-dev xorg-dev libx11-xcb-dev libxcb1-dev libxcb-keysyms1-dev

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Conan cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: conan-coverage-${{ hashFiles('conan*.[pl][yo]*') }}

      - name: Install dependencies
        run: |
          chmod +x .github/scripts/conan-ci-setup.sh
          .github/scripts/conan-ci-setup.sh

      - name: Configure
        run: cmake --preset=ci-coverage

      - name: Build
        run: cmake --build build/coverage -j 2

      - name: Test
        working-directory: build/coverage
        run: ctest --output-on-failure --no-tests=error -j 2

      - name: Process coverage info
        run: cmake --build build/coverage -t coverage

      - name: Submit to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: build/coverage/coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}

  ################################################################
  # 3) SANITIZE (Ubuntu + SwiftShader + needrestart disabled)
  ################################################################
  sanitize:
    needs: [ lint ]
    runs-on: ubuntu-24.04
    env:
      CXX: clang++-18
      DEBIAN_FRONTEND: noninteractive
      NEEDRESTART_MODE: a
    steps:
      - uses: actions/checkout@v4
      - uses: mozilla-actions/sccache-action@v0.0.5

      - name: Install Vulkan loader & SwiftShader
        run: |
          sudo apt-get update -q
          sudo apt-get install -y libvulkan1 vulkan-tools
          sudo mkdir -p /usr/share/vulkan/icd.d
          sudo wget -qO /usr/share/vulkan/icd.d/google_swiftshader_icd.json \
            https://raw.githubusercontent.com/google/SwiftShader/main/src/Vulkan/icd/icd.json
          sudo wget -qO /usr/lib/x86_64-linux-gnu/libVkICD_swiftshader.so \
            https://storage.googleapis.com/swiftshader/artifacts/Release/Linux/libVkICD_swiftshader.so

      - name: Install X11 headers
        run: |
          sudo apt-get install -y \
            libx11-dev libxrandr-dev libxi-dev libxrender-dev \
            libxkbcommon-dev xorg-dev libx11-xcb-dev libxcb1-dev libxcb-keysyms1-dev

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Conan cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: conan-sanitize-${{ hashFiles('conan*.[pl][yo]*') }}

      - name: Install dependencies
        run: |
          chmod +x .github/scripts/conan-ci-setup.sh
          .github/scripts/conan-ci-setup.sh

      - name: Configure
        run: cmake --preset=ci-sanitize

      - name: Build
        run: cmake --build build/sanitize -j 2

      - name: Test
        working-directory: build/sanitize
        env:
          ASAN_OPTIONS: "detect_leaks=1:halt_on_error=1"
          UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1"
        run: ctest --output-on-failure --no-tests=error -j 2

  ################################################################
  # 4) CROSS-PLATFORM TEST MATRIX
  ################################################################
  test:
    needs: [ lint ]
    strategy:
      matrix:
        os: [ macos-14, ubuntu-24.04, windows-2022 ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      # Ubuntu-only: disable needrestart + SwiftShader + X11
      - name: Setup Linux GPU support
        if: runner.os == 'Linux'
        env:
          DEBIAN_FRONTEND: noninteractive
          NEEDRESTART_MODE: a
        run: |
          sudo apt-get update -q
          sudo apt-get install -y libvulkan1 vulkan-tools libx11-dev libxrandr-dev \
            libxi-dev libxrender-dev libxkbcommon-dev xorg-dev \
            libx11-xcb-dev libxcb1-dev libxcb-keysyms1-dev
          sudo mkdir -p /usr/share/vulkan/icd.d
          sudo wget -qO /usr/share/vulkan/icd.d/google_swiftshader_icd.json \
            https://raw.githubusercontent.com/google/SwiftShader/main/src/Vulkan/icd/icd.json
          sudo wget -qO /usr/lib/x86_64-linux-gnu/libVkICD_swiftshader.so \
            https://storage.googleapis.com/swiftshader/artifacts/Release/Linux/libVkICD_swiftshader.so

      - name: Install Python
        uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Conan cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: conan-${{ matrix.os }}-${{ hashFiles('conan*.[pl][yo]*') }}

      - name: Install dependencies
        run: |
          chmod +x .github/scripts/conan-ci-setup.sh
          .github/scripts/conan-ci-setup.sh

      - name: Configure
        run: cmake --preset=ci-${{ matrix.os == 'ubuntu-24.04' && 'ubuntu' || (matrix.os == 'macos-14' && 'macos' || 'windows') }}

      - name: Build
        run: cmake --build build --config Release -j 2

      - name: Install
        run: cmake --install build --config Release --prefix prefix

      - name: Test
        working-directory: build
        run: ctest --output-on-failure --no-tests=error -C Release -j 2

  ################################################################
  # 5) DOCS
  ################################################################
  docs:
    needs: [ sanitize, test ]
    runs-on: ubuntu-24.04
    if: |
      github.ref == 'refs/heads/master' &&
      github.event_name == 'push' &&
      github.repository_owner == 'diejor'
    permissions: { contents: write }

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install m.css dependencies
        run: pip3 install jinja2 Pygments

      - name: Install Doxygen
        run: sudo apt-get install -y doxygen

      - name: Build docs
        run: cmake "-DPROJECT_SOURCE_DIR=$PWD" "-DPROJECT_BINARY_DIR=$PWD/build" \
             -P cmake/docs-ci.cmake

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/docs/html

